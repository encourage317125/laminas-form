<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.8.0@9cf4f60a333f779ad3bc704a555920e81d4fdcda">
  <file src="src/Annotation/AbstractBuilder.php">
    <InvalidArrayOffset>
      <code><![CDATA[$params['elementSpec']['spec']['type']]]></code>
    </InvalidArrayOffset>
    <RedundantConditionGivenDocblockType>
      <code>is_string($entity)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Annotation/AttributeBuilder.php">
    <NullArgument>
      <code>$annotations</code>
      <code>$annotations</code>
    </NullArgument>
  </file>
  <file src="src/Annotation/BuilderAbstractFactory.php">
    <InvalidStringClass>
      <code>new $requestedName()</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code>$annotationBuilder</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>AbstractBuilder</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Annotation/ElementAnnotationsListener.php">
    <PossiblyInvalidMethodCall>
      <code>getFormSpecification</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullReference>
      <code>getFormSpecification</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Annotation/InputFilter.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($inputFilter) && ! is_string($inputFilter)]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/ConfigProvider.php">
    <DeprecatedClass>
      <code>View\Helper\FormDateTime::class</code>
      <code>View\Helper\FormDateTime::class</code>
      <code>View\Helper\FormDateTime::class</code>
      <code>View\Helper\FormDateTime::class</code>
      <code>View\Helper\FormDateTime::class</code>
    </DeprecatedClass>
  </file>
  <file src="src/Element.php">
    <LessSpecificReturnStatement>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </LessSpecificReturnStatement>
  </file>
  <file src="src/Element/Captcha.php">
    <DocblockTypeContradiction>
      <code>gettype($captcha)</code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code>is_object($captcha)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Element/Collection.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$this->object instanceof Traversable]]></code>
      <code>is_array($object)</code>
      <code><![CDATA[is_array($this->object)]]></code>
      <code>is_object($elementOrFieldset)</code>
    </DocblockTypeContradiction>
    <ImplementedParamTypeMismatch>
      <code>$object</code>
    </ImplementedParamTypeMismatch>
    <MoreSpecificImplementedParamType>
      <code>$object</code>
    </MoreSpecificImplementedParamType>
    <NonInvariantDocblockPropertyType>
      <code>$object</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyNullArgument>
      <code>$templateElement</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor>
      <code>$object</code>
    </PropertyNotSetInConstructor>
    <RedundantCast>
      <code>(string) $name</code>
    </RedundantCast>
    <RedundantConditionGivenDocblockType>
      <code>gettype($elementOrFieldset)</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments>
      <code>bindValues</code>
    </TooManyArguments>
  </file>
  <file src="src/Element/Select.php">
    <MissingClosureParamType>
      <code>$value</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code>static function ($value) use ($unselectedValue) {</code>
    </MissingClosureReturnType>
  </file>
  <file src="src/ElementFactory.php">
    <InvalidStringClass>
      <code>new $requestedName($name, $options)</code>
    </InvalidStringClass>
  </file>
  <file src="src/Factory.php">
    <DocblockTypeContradiction>
      <code>gettype($spec)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$spec</code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->create($spec)]]></code>
      <code><![CDATA[$this->create($spec)]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>FieldsetInterface</code>
      <code>FormInterface</code>
    </MoreSpecificReturnType>
    <PossibleRawObjectIteration>
      <code>$elements</code>
      <code>$fieldsets</code>
    </PossibleRawObjectIteration>
    <RedundantConditionGivenDocblockType>
      <code>is_object($spec)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Fieldset.php">
    <DocblockTypeContradiction>
      <code>is_object($elementOrFieldset)</code>
      <code>is_object($object)</code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$object</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code>$object</code>
    </PossiblyInvalidArgument>
    <RedundantConditionGivenDocblockType>
      <code>gettype($elementOrFieldset)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/FieldsetInterface.php">
    <MissingTemplateParam>
      <code>IteratorAggregate</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Form.php">
    <ArgumentTypeCoercion>
      <code>$childFieldset</code>
      <code>$filter</code>
      <code>$spec</code>
      <code>$validationGroup</code>
    </ArgumentTypeCoercion>
    <InvalidArrayOffset>
      <code>$values[$cKey]</code>
    </InvalidArrayOffset>
    <LessSpecificReturnStatement>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </LessSpecificReturnStatement>
    <NoValue>
      <code>$cKey</code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code><![CDATA[$collectionInputFilter->get($name)]]></code>
      <code>$input</code>
      <code>$inputFilter</code>
      <code><![CDATA[$inputFilter->get($name)]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$this->data]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code>$data</code>
      <code>$validationGroup</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedMethod>
      <code>merge</code>
      <code>merge</code>
    </PossiblyUndefinedMethod>
    <TooManyArguments>
      <code>bindValues</code>
    </TooManyArguments>
  </file>
  <file src="src/FormAbstractServiceFactory.php">
    <PossiblyNullReference>
      <code>setPluginManager</code>
      <code>setPluginManager</code>
    </PossiblyNullReference>
  </file>
  <file src="src/FormElementManager.php">
    <DeprecatedClass>
      <code>Element\DateTime::class</code>
      <code>Element\DateTime::class</code>
      <code>Element\DateTime::class</code>
      <code>Element\DateTime::class</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType>
      <code>$aliases</code>
      <code>$factories</code>
      <code>$instanceOf</code>
    </NonInvariantDocblockPropertyType>
    <RedundantConditionGivenDocblockType>
      <code>$services</code>
      <code>$services</code>
      <code>$services</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/FormElementManagerFactory.php">
    <MoreSpecificImplementedParamType>
      <code>$options</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/FormFactoryAwareInterface.php">
    <MissingReturnType>
      <code>setFormFactory</code>
    </MissingReturnType>
  </file>
  <file src="src/View/Helper/AbstractFormDateSelect.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/View/Helper/AbstractHelper.php">
    <ArgumentTypeCoercion>
      <code>$encoding</code>
      <code>$encoding</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>getEncoding</code>
      <code>setEncoding</code>
      <code>setEncoding</code>
    </DeprecatedMethod>
    <InternalMethod>
      <code>getEncoding</code>
      <code>new EscapeHtml()</code>
      <code>new EscapeHtmlAttr()</code>
      <code>setEncoding</code>
      <code>setEncoding</code>
    </InternalMethod>
    <PossiblyNullReference>
      <code>translate</code>
      <code>translate</code>
      <code>translate</code>
    </PossiblyNullReference>
  </file>
  <file src="src/View/Helper/Form.php">
    <DeprecatedMethod>
      <code>getView</code>
    </DeprecatedMethod>
    <UndefinedMagicMethod>
      <code>formCollection</code>
      <code>formRow</code>
    </UndefinedMagicMethod>
  </file>
  <file src="src/View/Helper/FormButton.php">
    <DocblockTypeContradiction>
      <code>gettype($attributesOrElement)</code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code>is_object($attributesOrElement)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/View/Helper/FormCaptcha.php">
    <DeprecatedMethod>
      <code>getView</code>
    </DeprecatedMethod>
  </file>
  <file src="src/View/Helper/FormCollection.php">
    <DeprecatedMethod>
      <code>getView</code>
    </DeprecatedMethod>
    <InvalidFunctionCall>
      <code>$elementHelper($elementOrFieldset)</code>
      <code>$elementHelper($elementOrFieldset)</code>
      <code><![CDATA[$fieldsetHelper($elementOrFieldset, $this->shouldWrap())]]></code>
      <code><![CDATA[$fieldsetHelper($elementOrFieldset, $this->shouldWrap())]]></code>
    </InvalidFunctionCall>
    <TypeDoesNotContainType>
      <code>assert(is_callable($elementHelper))</code>
      <code>assert(is_callable($elementHelper))</code>
      <code>assert(is_callable($fieldsetHelper))</code>
      <code>assert(is_callable($fieldsetHelper))</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/View/Helper/FormElementErrors.php">
    <MissingClosureParamType>
      <code>$item</code>
    </MissingClosureParamType>
    <PossiblyNullReference>
      <code>translate</code>
    </PossiblyNullReference>
  </file>
  <file src="src/View/Helper/FormLabel.php">
    <DocblockTypeContradiction>
      <code>gettype($attributesOrElement)</code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code>is_object($attributesOrElement)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/View/Helper/FormMultiCheckbox.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->view]]></code>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/View/Helper/FormRow.php">
    <PossiblyNullReference>
      <code>render</code>
    </PossiblyNullReference>
  </file>
  <file src="src/View/Helper/FormSelect.php">
    <PossiblyInvalidArgument>
      <code>$optionSpec</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/Annotation/AbstractBuilderTestCase.php">
    <DocblockTypeContradiction>
      <code>assertNotNull</code>
    </DocblockTypeContradiction>
    <PossiblyUndefinedMethod>
      <code>allowEmpty</code>
      <code>getFilterChain</code>
      <code>getFilterChain</code>
      <code>getValidatorChain</code>
      <code>getValidatorChain</code>
      <code>getValidatorChain</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Element/CaptchaTest.php">
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="test/Element/CheckboxTest.php">
    <PossiblyInvalidMethodCall>
      <code>getHaystack</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getHaystack</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/CollectionTest.php">
    <InvalidArgument>
      <code>$obj2</code>
      <code>$obj3</code>
    </InvalidArgument>
    <InvalidArrayOffset>
      <code>$data[$index]</code>
      <code>$names[$i]</code>
    </InvalidArrayOffset>
    <NullArgument>
      <code>null</code>
    </NullArgument>
    <PossiblyUndefinedMethod>
      <code>setObject</code>
    </PossiblyUndefinedMethod>
    <PossiblyUndefinedVariable>
      <code>$products</code>
      <code>$shop</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="test/Element/ColorTest.php">
    <PossiblyInvalidMethodCall>
      <code>getPattern</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getPattern</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/CsrfTest.php">
    <PossiblyInvalidMethodCall>
      <code>getName</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getName</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/DateSelectTest.php">
    <PossiblyInvalidMethodCall>
      <code>getFormat</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getFormat</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/DateTest.php">
    <PossiblyInvalidMethodCall>
      <code>getBaseValue</code>
      <code>getBaseValue</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getBaseValue</code>
      <code>getBaseValue</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/DateTimeLocalTest.php">
    <PossiblyInvalidMethodCall>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/DateTimeSelectTest.php">
    <PossiblyInvalidMethodCall>
      <code>getFormat</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getFormat</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/DateTimeTest.php">
    <DeprecatedClass>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
      <code><![CDATA[new DateTimeElement('foo')]]></code>
    </DeprecatedClass>
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$filter['name']]]></code>
      <code><![CDATA[$filter['options']]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$filter['options']]]></code>
      <code><![CDATA[$inputSpec['filters']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>$filter</code>
      <code>$filter</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/EmailTest.php">
    <PossiblyInvalidMethodCall>
      <code>getValidator</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getValidator</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/MonthSelectTest.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>getPattern</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getPattern</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/Element/MonthTest.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/Element/MultiCheckboxTest.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>getValidator</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getValidator</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/Element/NumberTest.php">
    <PossiblyInvalidMethodCall>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/RadioTest.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedMethod>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/Element/RangeTest.php">
    <PossiblyInvalidMethodCall>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getMin</code>
      <code>getStep</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getMin</code>
      <code>getStep</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/SelectTest.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>getValidator</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['allow_empty']]]></code>
      <code><![CDATA[$inputSpec['continue_if_empty']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getValidator</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/Element/TelTest.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['name']]]></code>
      <code><![CDATA[$inputSpec['required']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="test/Element/TimeTest.php">
    <PossiblyInvalidMethodCall>
      <code>getFormat</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getFormat</code>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/UrlTest.php">
    <PossiblyInvalidMethodCall>
      <code>getAllowAbsolute</code>
      <code>getAllowRelative</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getAllowAbsolute</code>
      <code>getAllowRelative</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/Element/WeekTest.php">
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$inputSpec['validators'][0]]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidMethodCall>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getInclusive</code>
      <code>getInclusive</code>
      <code>getMax</code>
      <code>getMin</code>
      <code>getStep</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/ErrorHandler.php">
    <InvalidArgument>
      <code><![CDATA[static function (int $errno, string $errstr, string $errfile, int $errline): void {
            if (! (error_reporting() & $errno)) {
                return;
            }

             throw new ErrorException($errstr, 0, $errno, $errfile, $errline);
        }]]></code>
    </InvalidArgument>
  </file>
  <file src="test/FactoryTest.php">
    <PossiblyUndefinedVariable>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
      <code>$test</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="test/FieldsetTest.php">
    <InvalidArgument>
      <code><![CDATA['foo']]></code>
    </InvalidArgument>
    <NullArgument>
      <code>null</code>
    </NullArgument>
  </file>
  <file src="test/FormAbstractServiceFactoryTest.php">
    <PossiblyNullReference>
      <code>getPluginManager</code>
      <code>getPluginManager</code>
      <code>getPluginManager</code>
      <code>getPluginManager</code>
    </PossiblyNullReference>
  </file>
  <file src="test/FormElementManagerFactoryTest.php">
    <MissingClosureParamType>
      <code>$container</code>
    </MissingClosureParamType>
  </file>
  <file src="test/FormTest.php">
    <PossiblyUndefinedMethod>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>getFilterChain</code>
      <code>getFilterChain</code>
      <code>getFilterChain</code>
      <code>getFilterChain</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getValidatorChain</code>
      <code>getValidatorChain</code>
      <code>getValidatorChain</code>
      <code>getValidatorChain</code>
      <code>has</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
    </PossiblyUndefinedMethod>
    <PropertyTypeCoercion>
      <code><![CDATA[$factory->createForm($spec)]]></code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(string) print_r($chain, true)</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="test/Integration/FormCreatesCollectionInputFilterTest.php">
    <InvalidArgument>
      <code>$validators</code>
      <code>$validators</code>
      <code>$validators</code>
    </InvalidArgument>
    <PossiblyUndefinedMethod>
      <code>getValidatorChain</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/TestAsset/AddressFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/Annotation/ComplexEntity.php">
    <DeprecatedClass>
      <code>Annotation\AllowEmpty()</code>
    </DeprecatedClass>
  </file>
  <file src="test/TestAsset/Annotation/LegacyHydratorAnnotation.php">
    <MissingPropertyType>
      <code>$username</code>
    </MissingPropertyType>
  </file>
  <file src="test/TestAsset/Annotation/SampleEntity.php">
    <DeprecatedClass>
      <code>Annotation\AllowEmpty(true)</code>
      <code>Annotation\ContinueIfEmpty(true)</code>
    </DeprecatedClass>
  </file>
  <file src="test/TestAsset/BasicFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/CategoryFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/CityFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/CountryFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/CustomCollection.php">
    <PropertyNotSetInConstructor>
      <code>CustomCollection</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/TestAsset/CustomFieldsetHelper.php">
    <PossiblyNullArgument>
      <code><![CDATA[$fieldset->getName()]]></code>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/TestAsset/CustomViewHelper.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getName()]]></code>
      <code><![CDATA[$this->view]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/TestAsset/ElementWithFilter.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/ElementWithStringToArrayFilter.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/FieldsetWithDependency.php">
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
    <PropertyNotSetInConstructor>
      <code>$dependency</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/TestAsset/FieldsetWithInputFilter.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/FileInputFilterProviderFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
  </file>
  <file src="test/TestAsset/FileInputFilterProviderForm.php">
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
  </file>
  <file src="test/TestAsset/InputFilterProvider.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
  </file>
  <file src="test/TestAsset/InputFilterProviderFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
  </file>
  <file src="test/TestAsset/InputFilterProviderWithFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
  </file>
  <file src="test/TestAsset/MyFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/NestedFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/OrphansFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array[]</code>
    </LessSpecificImplementedReturnType>
    <MissingParamType>
      <code>$name</code>
      <code>$options</code>
    </MissingParamType>
  </file>
  <file src="test/TestAsset/ProductFieldset.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
    </LessSpecificImplementedReturnType>
  </file>
  <file src="test/TestAsset/ValueStoringFieldset.php">
    <PropertyNotSetInConstructor>
      <code>$storedValue</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/View/Helper/AbstractCommonTestCase.php">
    <DeprecatedMethod>
      <code>getEncoding</code>
      <code>getEncoding</code>
      <code>setView</code>
    </DeprecatedMethod>
    <InternalMethod>
      <code>getEncoding</code>
      <code>getEncoding</code>
    </InternalMethod>
    <UnsafeInstantiation>
      <code>new $helperClass()</code>
    </UnsafeInstantiation>
  </file>
  <file src="test/View/Helper/File/FormFileApcProgressTest.php">
    <InvalidArgument>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
    </InvalidArgument>
  </file>
  <file src="test/View/Helper/File/FormFileSessionProgressTest.php">
    <InvalidArgument>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
    </InvalidArgument>
  </file>
  <file src="test/View/Helper/File/FormFileUploadProgressTest.php">
    <InvalidArgument>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
      <code>$markup</code>
    </InvalidArgument>
  </file>
  <file src="test/View/Helper/FormButtonTest.php">
    <InvalidArgument>
      <code>$element</code>
    </InvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormCaptchaTest.php">
    <PossiblyFalseArgument>
      <code><![CDATA[getenv('TESTS_LAMINAS_FORM_RECAPTCHA_PRIVATE_KEY')]]></code>
      <code><![CDATA[getenv('TESTS_LAMINAS_FORM_RECAPTCHA_PUBLIC_KEY')]]></code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand>
      <code><![CDATA[getenv('TESTS_LAMINAS_FORM_RECAPTCHA_PUBLIC_KEY')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="test/View/Helper/FormCollectionTest.php">
    <DeprecatedMethod>
      <code>setView</code>
      <code>setView</code>
    </DeprecatedMethod>
  </file>
  <file src="test/View/Helper/FormColorTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormDateTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormDateTimeLocalTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormDateTimeTest.php">
    <DeprecatedClass>
      <code>new FormDateTimeHelper()</code>
    </DeprecatedClass>
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormElementTest.php">
    <PossiblyInvalidMethodCall>
      <code>getHash</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$inputSpec['validators']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getHash</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/View/Helper/FormEmailTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormFileTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormHiddenTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormImageTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormInputTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormLabelTest.php">
    <InvalidArgument>
      <code>$element</code>
    </InvalidArgument>
  </file>
  <file src="test/View/Helper/FormMonthTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormNumberTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormPasswordTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormRangeTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormResetTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormRowTest.php">
    <PossiblyInvalidFunctionCall>
      <code>$escapeHelper($label)</code>
    </PossiblyInvalidFunctionCall>
  </file>
  <file src="test/View/Helper/FormSearchTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormSubmitTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormTelTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormTextTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormTextareaTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormTimeTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormUrlTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/View/Helper/FormWeekTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$element->getAttribute($attribute)]]></code>
    </PossiblyNullArgument>
  </file>
</files>
